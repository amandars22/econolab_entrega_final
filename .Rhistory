?adf.test
?adf.test
?adf.test
library(tseries)
library(vars)
library(tidyverse)
library(stargazer)
install.packages(stargazer)
?VARselect
install.packages("stargazer")
library(stargazer)
?var
?vars
library(vars)
?VAR
library(httr)
library(readr)
# Código 433 = IPCA 12 meses à frente (mediana das expectativas)
url <- "https://api.bcb.gov.br/dados/serie/bcdata.sgs.433/dados?formato=csv"
dados_ipca_12m <- read_csv2(url)
head(dados_ipca_12m)
View(dados_ipca_12m)
View(dados_ipca_12m)
# Carregar pacotes
library(readxl)
library(dplyr)
setwd("C:/Users/amand/OneDrive - Insper - Instituto de Ensino e Pesquisa/Insper/7° Semestre/Econolab/entrega_final")
# Ler cada planilha (ajuste o nome da aba se necessário)
df_2000_2010 <- read_excel("expectativa_inflacao_anual_2000_2010.xls")
df_2011_2021 <- read_excel("expectativa_inflacao_anual_2011_2021.xls")
df_2022_2025 <- read_excel("expectativa_inflacao_anual_2022_2025.xls")
View(df_2000_2010)
View(df_2011_2021)
# Ler cada planilha (ajuste o nome da aba se necessário)
df_2000_2010 <- read_excel("expectativa_inflacao_anual_2000_2010.xls", skip = 1)
df_2011_2021 <- read_excel("expectativa_inflacao_anual_2011_2021.xls", skip = 1)
df_2022_2025 <- read_excel("expectativa_inflacao_anual_2022_2025.xls", skip = 1)
View(df_2000_2010)
View(df_2011_2021)
View(df_2022_2025)
# Verifique os nomes das colunas e padronize, se necessário
names(df_2000_2010)
names(df_2011_2021)
names(df_2022_2025)
View(df_2000_2010)
# Unir os três dataframes
df_unido <- bind_rows(df_2000_2010, df_2011_2021, df_2022_2025)
# Verifique como ficou
glimpse(df_unido)
View(df_unido)
View(df_unido)
library(lubridate)
df_filtrado <- df_unido %>%
mutate(Data = as.Date(Data),              # Converter para Date
Ano = year(Data),
Mes = month(Data)) %>%             # Extrair ano e mês
group_by(Ano, Mes) %>%
slice_min(order_by = Data, n = 1) %>%     # Pega a primeira data do mês
ungroup()
View(df_filtrado)
df_salario_minimo <- read_excel("salario_minimo")
df_hiato_produto <- read_excel("hiato_produto")
df_ipca_servicos <- read_excel("ipca_servicos")
df_salario_minimo <- read_excel("salario_minimo")
df_hiato_produto <- read_excel("hiato_produto")
df_ipca_servicos <- read_excel("ipca_servicos")
df_salario_minimo <- read_excel("salario_minimo.xls")
df_hiato_produto <- read_excel("hiato_produto.xls")
df_ipca_servicos <- read_excel("ipca_servicos.xls")
df_salario_minimo <- read_excel("salario_minimo.xls")
df_hiato_produto <- read_excel("hiato_produto.xls")
df_ipca_servicos <- read_excel("ipca_servicos.xls")
df_salario_minimo <- read_excel("salario_minimo.xlsx")
df_hiato_produto <- read_excel("hiato_produto.xlsx")
x
df_ipca_servicos <- read_excel("ipca_servicos.xlsx")
df_salario_minimo <- read_excel("salario_minimo.xlsx")
df_hiato_produto <- read_excel("hiato_produto.xlsx")
x
df_ipca_servicos <- read_excel("ipca_servicos.xlsx")
View(df_hiato_produto)
View(df_salario_minimo)
View(df_ipca_servicos)
rename(ipca_servicos = "10844 - Índice Nacional de Preços ao Consumidor - Amplo (IPCA) - Serviços - Var. % mensal")
rename("ipca_servicos" = "10844 - Índice Nacional de Preços ao Consumidor - Amplo (IPCA) - Serviços - Var. % mensal")
names(df_ipca_servicos)[names(df_ipca_servicos) == "10844 - Índice Nacional de Preços ao Consumidor - Amplo (IPCA) - Serviços - Var. % mensal"] <- "ipca_servicos"
View(df_ipca_servicos)
View(df_salario_minimo)
reajuste_anual <- df_salario %>%
filter(month(data) == 1) %>%             # filtra só janeiro
arrange(data) %>%                        # ordena por data
mutate(
ano = year(data),
reajuste_percentual = (salario_minimo / lag(salario_minimo) - 1) * 100
)
reajuste_anual <- df_salario_minimo %>%
filter(month(data) == 1) %>%             # filtra só janeiro
arrange(data) %>%                        # ordena por data
mutate(
ano = year(data),
reajuste_percentual = (salario_minimo / lag(salario_minimo) - 1) * 100
)
View(df_salario_minimo)
reajuste_anual <- df_salario_minimo %>%
filter(month(data) == 1) %>%             # filtra só janeiro
arrange(data) %>%                        # ordena por data
mutate(
ano = year(data),
reajuste_percentual = (`salario minimo` / lag(`salario minimo`) - 1) * 100
)
View(reajuste_anual)
